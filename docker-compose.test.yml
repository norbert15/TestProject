version: '3.8'

services:
  http_api:
    image: http-api-gateway
    container_name: http-api-gateway
    build:
      context: ./
      dockerfile: ./apps/http-api-gateway/Dockerfile
    depends_on:
      - nats_server
      - postgres
      - profile_service
      - address_service
      - auth_service
    ports:
      - '3000:3000'
    command: npm run start http-api-gateway
    networks:
      - main

  address_service:
    image: address-service
    container_name: address-service
    build:
      context: ./
      dockerfile: ./apps/address-service/Dockerfile
    depends_on:
      - nats_server
      - postgres
    ports:
      - '3002:3002'
    command: npm run start address-service
    networks:
      - main

  auth_service:
    image: auth-service
    container_name: auth-service
    build:
      context: ./
      dockerfile: ./apps/auth-service/Dockerfile
    depends_on:
      - nats_server
      - postgres
    ports:
      - '3003:3003'
    command: npm run start auth-service
    networks:
      - main

  test_http_api_gateway:
    image: test-htt-api-gateway
    container_name: test-htt-api-gateway
    build:
      context: ./
      dockerfile: ./apps/http-api-gateway/Dockerfile.test
    depends_on:
      - http_api
      - nats_server
      - profile_service
      - address_service
      - auth_service
    networks:
      - main

  profile_service:
    image: profile-service
    container_name: profile-service
    build:
      context: ./
      dockerfile: ./apps/profile-service/Dockerfile
    depends_on:
      - nats_server
      - postgres
    ports:
      - '3001:3001'
    command: npm run start profile-service
    networks:
      - main

  nats_server:
    image: nats
    ports:
      - '4222:4222'
    networks:
      - main

  test_address_serivce:
    image: test-address-service
    container_name: test-address-service
    build:
      context: ./
      dockerfile: ./apps/address-service/Dockerfile.test
    depends_on:
      - http_api
      - nats_server
      - profile_service
      - address_service
      - auth_service
    networks:
      - main

  test_profile_service:
    image: test-profile-service
    container_name: test-profile-service
    build:
      context: ./
      dockerfile: ./apps/profile-service/Dockerfile.test
    depends_on:
      - http_api
      - nats_server
      - profile_service
      - address_service
      - auth_service
    networks:
      - main

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    networks:
      - main

  liquibase:
    image: liquibase/liquibase
    container_name: liquibase
    depends_on:
      - postgres
    volumes:
      - ./liquibase/changelog:/liquibase/changelog
    environment:
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      - LIQUIBASE_COMMAND_USERNAME=${DB_USER}
      - LIQUIBASE_COMMAND_PASSWORD=${DB_PASSWORD}
      - LIQUIBASE_COMMAND_CHANGELOG_FILE=changelog/db.changelog.xml
    entrypoint: ['liquibase']
    command: ['update']
    networks:
      - main

networks:
  main:
    driver: bridge
